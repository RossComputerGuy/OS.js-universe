{
  "name": "jquery.terminal",
  "version": "0.11.23",
  "description": "jQuery Terminal Emulator is a plugin for creating command line interpreters in your applications.",
  "main": "js/jquery.terminal.js",
  "keywords": [
    "terminal",
    "emulator",
    "prompt",
    "console",
    "keyboard",
    "type",
    "rpc",
    "input",
    "ui"
  ],
  "author": {
    "name": "Jakub Jankiewicz",
    "email": "jcubic@onet.pl",
    "url": "http://jcubic.pl"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jcubic/jquery.terminal.git"
  },
  "bugs": {
    "url": "https://github.com/jcubic/jquery.terminal/issues"
  },
  "homepage": "http://terminal.jcubic.pl",
  "dependencies": {
    "jquery": "^2.1.4"
  },
  "devDependencies": {
    "istanbul": "^0.4.3",
    "jasmine": "^2.4.1",
    "jasmine-node": "^1.14.5",
    "jsdom": "^3.1.2"
  },
  "gitHead": "ce3516a75177429acc5e378f3b248c960287fe7a",
  "_id": "jquery.terminal@0.11.23",
  "scripts": {},
  "_shasum": "b66354f824c4c3e7eb76326778fba9c9a5a3af44",
  "_from": "jquery.terminal",
  "_npmVersion": "3.10.8",
  "_nodeVersion": "7.0.0",
  "_npmUser": {
    "name": "jcubic",
    "email": "jcubic@onet.pl"
  },
  "dist": {
    "shasum": "56f17d1dd641664e13b99ac6c8f606dce9ef052b",
    "tarball": "https://registry.npmjs.org/jquery.terminal/-/jquery.terminal-0.11.23.tgz"
  },
  "maintainers": [
    {
      "name": "jcubic",
      "email": "jcubic@onet.pl"
    }
  ],
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/jquery.terminal-0.11.23.tgz_1481451920493_0.32130196248181164"
  },
  "directories": {},
  "_resolved": "file:jquery.terminal",
  "readme": "```\n       __ _____                     ________                              __\n      / // _  /__ __ _____ ___ __ _/__  ___/__ ___ ______ __ __  __ ___  / /\n  __ / // // // // // _  // _// // / / // _  // _//     // //  \\/ // _ \\/ /\n /  / // // // // // ___// / / // / / // ___// / / / / // // /\\  // // / /__\n \\___//____ \\\\___//____//_/ _\\_  / /_//____//_/ /_/ /_//_//_/ /_/ \\__\\_\\___/\n           \\/              /____/                              version 0.11.23\n```\nhttp://terminal.jcubic.pl\n\n### Summary\n\njQuery Terminal Emulator is a plugin for creating command line interpreters in\nyour applications. It can automatically call JSON-RPC service when a user types\ncommands or you can provide you own function in which you can parse user\ncommands. It's ideal if you want to provide additional functionality for power\nusers. It can also be used to debug your application.\n\n### Features:\n\n* You can create an interpreter for your JSON-RPC service with one line\n  of code (just use url as first argument).\n\n* Support for authentication (you can provide functions when users enter\n  login and password or if you use JSON-RPC it can automatically call\n  login function on the server and pass token to all functions)\n\n* Stack of interpreters - you can create commands that trigger additional\n  interpreters (eg. you can use couple of JSON-RPC service and run them\n  when user type command)\n\n* Command Tree - you can use nested objects. Each command will invoke a\n  function, if the value is an object it will create a new interpreter and\n  use the function from that object as commands. You can use as many nested\n  object/commands as you like. If the value is a string it will create\n  JSON-RPC service.\n\n* Support for command line history, it uses Local Storage if possible\n\n* Support for tab completion\n\n* Includes keyboard shortcut from bash like CTRL+A, CTRL+D, CTRL+E etc.\n\n* Multiply terminals on one page (every terminal can have different\n  command, it's own authentication function and it's own command history)\n\n* It catches all exceptions and displays error messages in the terminal\n  (you can see errors in your javascript and php code in terminal if they\n  are in the interpreter function)\n\n### Installation\nYou can install jQuery Terminal from bower:\n\n```\nbower install jquery.terminal\n```\n\nor npm:\n\n```\nnpm install --save jquery.terminal\n```\n\nInclude js/jquery.terminal-0.11.23.min.js and css/jquery.terminal-0.11.23.css\nYou can also include js/jquery.mousewheel-min.js\n\n```html\n<script src=\"js/jquery.terminal-0.11.23.min.js\"></script>\n<script src=\"js/jquery.mousewheel-min.js\"></script>\n<link href=\"css/jquery.terminal-0.11.23.css\" rel=\"stylesheet\"/>\n```\n\nYou can also grab the files from CDN:\n\n```html\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery.terminal/0.11.23/js/jquery.terminal.min.js\"></script>\n<link href=\"https://cdnjs.cloudflare.com/ajax/libs/jquery.terminal/0.11.23/css/jquery.terminal.min.css\" rel=\"stylesheet\"/>\n```\n\nor\n\n```html\n<script src=\"https://cdn.jsdelivr.net/jquery.terminal/0.11.23/jquery.terminal.min.js\"></script>\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/jquery.terminal/0.11.23/jquery.terminal.min.css\">\n```\n\nAnd you're good to go.\n\n### Example of usage (javascript interpreter)\n\nThis is code that uses low level, that gives you full control of the commands,\njust pass anything that the user types into a function.\n\n```javascript\njQuery(function($, undefined) {\n    $('#term_demo').terminal(function(command, term) {\n        if (command !== '') {\n            var result = window.eval(command);\n            if (result != undefined) {\n                term.echo(String(result));\n            }\n        }\n    }, {\n        greetings: 'Javascript Interpreter',\n        name: 'js_demo',\n        height: 200,\n        width: 450,\n        prompt: 'js> '\n    });\n});\n```\n\nHere is a higher level call, using an object as an interpreter, By default the terminal will\nparse commands that a user types and replace number like strings with real numbers\nregex with regexes and process escape characters in double quoted strings.\nCommand foo will execute json-rpc from foo.php file.\n\n```javascript\njQuery(function($, undefined) {\n    $('#term_demo').terminal({\n        add: function(a, b) {\n            this.echo(a + b);\n        },\n        foo: 'foo.php',\n        bar: {\n            sub: function(a, b) {\n                this.echo(a - b);\n            }\n        }\n    }, {\n        height: 200,\n        width: 450,\n        prompt: 'demo> '\n    });\n});\n```\n\nYou can create JSON-RPC interpreter with authentication in just one line:\n\n```javascript\n$('#term_demo').terminal('service.php', {login: true});\n```\n\nMore examples [here](http://terminal.jcubic.pl/examples.php). You can also check\n[full documentation](http://terminal.jcubic.pl/api_reference.php).\n\n### Test\n\nIf you want to run tests from browser you need to run\n\n```\nbower install --dev\n```\n\nand open SpecRunner.html file in the browser\n\n\nTo run tests from command line you need to run this commands:\n\n```\nnpm install\nmake test\n```\n\nyou can also run test covarage using\n\n```\nmake cover\n```\n\n### Live Chat\n\n[![Gitter chat](https://badges.gitter.im/jcubic/jquery.terminal.png)](https://gitter.im/jcubic/jquery.terminal)\n\n\nLicensed under [MIT](http://opensource.org/licenses/MIT) license\n\nCopyright (c) 2011-2016 [Jakub Jankiewicz](http://jcubic.pl)\n",
  "readmeFilename": "README.md"
}
